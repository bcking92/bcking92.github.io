I"L<p>Python을 사용하다 보면 이런 코드를 많이 볼 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
</code></pre></div></div>

<p>이 때,  <code class="highlighter-rouge">__name__</code> 은 뭐고 <code class="highlighter-rouge">__main__</code>은 뭘까요?</p>

<p><code class="highlighter-rouge">__name__</code>은 모듈(파일)의 이름을 나타냅니다. 예를 들어, 실행된 python 파일의 이름이 kim.py 라면 <code class="highlighter-rouge">__name__</code> 의 값은 kim이 되는 겁니다.</p>

<p>그럼 <code class="highlighter-rouge">__main__</code>은 뭘까요?  사실 <code class="highlighter-rouge">__name__</code>은 특별한 기능이 하나 더 있습니다.</p>

<p>해당 python 파일이 import 되지 않고 직접적으로 실행될 때, 즉 main program으로서 작동 했을 때 <code class="highlighter-rouge">__name__</code>의 값은 모듈 이름이 아니라 <code class="highlighter-rouge">__main__</code>으로 나타나게 됩니다.</p>

<p>말이 어려우니 코드를 쳐봅시다.</p>

<p>먼저 python 파일을 2개 만들어 보겠습니다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>test/
    test1.py
    test2.py
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># test1.py
</span>
<span class="k">print</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># test2.py
</span>
<span class="kn">import</span> <span class="nn">test1</span>
</code></pre></div></div>

<p>이런식으로 test1.py 파일과 test2.py 파일을 만들고 실행해 보겠습니다. 결과는 아래와 같습니다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python test1.py
__main__
</code></pre></div></div>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python test2.py
test1
</code></pre></div></div>

<p>test1.py 파일을 직접 실행했을 때는 <code class="highlighter-rouge">__name__</code>의 print 값이 <code class="highlighter-rouge">__main__</code>으로 나타났습니다. 하지만 test2.py 에서 test1을 import 한 후 test2.py를 실행 했을 때는 <code class="highlighter-rouge">__name__</code>의 값이 <code class="highlighter-rouge">test1</code>이라고 나온걸 알 수 있습니다.</p>

<p>위와 같이 test1.py가 직접 실행되었을 때(main program으로서 실행되었을 때)는 module의 이름이 <code class="highlighter-rouge">__main__</code>이라고 정해지고 import 되어 실행된다면 module의 이름은 해당 파일의 이름이 됩니다.</p>

<p>예시 코드를 하나 더 만들어 보겠습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># test1.py
</span>
<span class="k">print</span><span class="p">(</span><span class="s">'this is test1.py'</span><span class="p">)</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'this file is executed as a script'</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">'this file is imported'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># test2.py
</span>
<span class="kn">import</span> <span class="nn">test1</span>

<span class="k">print</span><span class="p">(</span><span class="s">'this is test2.py!!'</span><span class="p">)</span>
</code></pre></div></div>

<p>위와 같이 수정을 하고 python 파일을 각각 실행해 보면 아래와 같은 결과가 나옵니다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python test1.py
this is test1.py
this file is executed as a script
</code></pre></div></div>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>python test2.py
this is test1.py
this file is imported
this is test2.py!!
</code></pre></div></div>

<p>test1.py를 직접 실행했을 때는 <code class="highlighter-rouge">this is test1.py</code>라는 문장이 먼저 프린트 되고 <code class="highlighter-rouge">__name__</code>이 <code class="highlighter-rouge">__main__</code>이기 때문에 if 문이 <code class="highlighter-rouge">True</code> 가 되므로 <code class="highlighter-rouge">this file is executed as a script</code>라는 문장이 프린트 되었습니다.</p>

<p>test2.py를 실행했을 때도 마찬가지고 <code class="highlighter-rouge">this is test1.py</code>라는 문장이 프린트 되었습니다. test1.py를 import 했기 때문이죠(*python은 module을 import하면 module의 모든 코드를 다 읽습니다)</p>

<p>그 아래는 test1.py를 실행했을 때와는 다르게 <code class="highlighter-rouge">this file is imported</code>라는 문장이 출력되었습니다. test1 이 import 되어 사용되었기 때문에 <code class="highlighter-rouge">__name__</code> 값이 <code class="highlighter-rouge">test1</code> 이 되고 if 문이 <code class="highlighter-rouge">False</code> 이기 때문에 else에 결과가 실행이 된 것입니다.</p>

<p>test1의 코드가 모두 실행이 된 후에 test2.py 의 코드인  <code class="highlighter-rouge">this is test2.py!!</code>라는 문장이 출력됩니다.</p>

<h3 id="결론">결론</h3>

<p><code class="highlighter-rouge">__name__</code>은 모듈의 이름을 나타내고 직접 실행될 경우(main program 으로서 실행, script로서 실행)에는 <code class="highlighter-rouge">__main__</code>이라는 이름을 가진다.</p>
:ET